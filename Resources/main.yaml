AWSTemplateFormatVersion: '2010-09-09'
Description: Main stack template

Parameters:
  VPCName:
    Type: String
    Description: The name of the VPC

  EC2InstanceName:
    Type: String
    Description: The name of the EC2 instance

  S3BucketNameCreate:
    Type: String
    Description: The name of the S3 bucket to be created

  Environment:
    Type: String
    Description: The environment name
    Default: dev
    AllowedValues: [dev, prod]

  AccessControl:
    Type: String
    Description: The access control for the S3 bucket
    Default: Private
    AllowedValues: [Private, PublicRead, PublicReadWrite, AuthenticatedRead]

  VersioningStatus:
    Type: String
    Description: The versioning status for the S3 bucket
    Default: Enabled
    AllowedValues: [Enabled, Suspended]

Resources:
  NestedVPCStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - NestedIAMRoleStack
    Properties:
      TemplateURL: 
        Fn::Sub: "https://s3.${AWS::Region}.amazonaws.com/my-demo-s3-bucket-test-project-11/vpc.yaml"
      Parameters:
        VPCName: !Ref VPCName

  NestedEC2InstanceStack:
    Type: AWS::CloudFormation::Stack

    Properties:
      TemplateURL: 
        Fn::Sub: "https://s3.${AWS::Region}.amazonaws.com/my-demo-s3-bucket-test-project-11/ec2.yaml"
      Parameters:
        EC2InstanceName: !Ref EC2InstanceName

  NestedIAMRoleStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 
        Fn::Sub: "https://s3.${AWS::Region}.amazonaws.com/my-demo-s3-bucket-test-project-11/iam-role.yaml"

  NestedS3Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - NestedIAMRoleStack
    Properties:
      TemplateURL: 
        Fn::Sub: 'https://s3.amazonaws.com/my-demo-s3-bucket-test-project-11/s3.yaml'
      Parameters:
        S3BucketName: !Ref S3BucketNameCreate
        AccessControl: !Ref AccessControl
        VersioningStatus: !Ref VersioningStatus

Outputs:
  VPCId:
    Value: !GetAtt NestedVPCStack.Outputs.VPCId
    Export:
      Name: !Sub "${Environment}-VPCId"

  InstanceId:
    Value: !GetAtt NestedEC2InstanceStack.Outputs.InstanceId
    Export:
      Name: !Sub "${Environment}-InstanceId"

  S3BucketName:
    Value: !GetAtt NestedS3Stack.Outputs.S3BucketName
    Export:
      Name: !Sub "${Environment}-S3BucketName"

  IAMRole:
    Value: !GetAtt NestedIAMRoleStack.Outputs.LambdaExecutionRoleArn
    Export:
      Name: !Sub "${Environment}-IAMRole"